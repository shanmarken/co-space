// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for sending automated confirmation emails
 * to users after they submit a general inquiry via the contact form.
 *
 * @exports automatedInquiryResponse - The main function to trigger the flow.
 * @exports AutomatedInquiryResponseInput - The input type for the flow.
 * @exports AutomatedInquiryResponseOutput - The output type for the flow.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Define the input schema for the inquiry information
const AutomatedInquiryResponseInputSchema = z.object({
  name: z.string().describe('The name of the user submitting the inquiry.'),
  email: z.string().email().describe('The email address of the user.'),
  subject: z.string().describe('The subject of the inquiry.'),
  message: z.string().describe('The message content of the inquiry.'),
});
export type AutomatedInquiryResponseInput = z.infer<typeof AutomatedInquiryResponseInputSchema>;

// Define the output schema for the confirmation email sending result
const AutomatedInquiryResponseOutputSchema = z.object({
  success: z.boolean().describe('Whether the confirmation email was sent successfully.'),
  message: z.string().describe('A message indicating the status of the email sending process.'),
});
export type AutomatedInquiryResponseOutput = z.infer<typeof AutomatedInquiryResponseOutputSchema>;

// Exported function to trigger the automated inquiry response flow
export async function automatedInquiryResponse(input: AutomatedInquiryResponseInput): Promise<AutomatedInquiryResponseOutput> {
  return automatedInquiryResponseFlow(input);
}

// Define the Genkit prompt for generating the confirmation email
const automatedInquiryResponsePrompt = ai.definePrompt({
  name: 'automatedInquiryResponsePrompt',
  input: {schema: AutomatedInquiryResponseInputSchema},
  output: {schema: AutomatedInquiryResponseOutputSchema},
  prompt: `You are an automated system that sends confirmation emails to users after they submit an inquiry.

  A user named {{name}} with email {{email}} has submitted the following inquiry with subject: {{subject}} and message: {{message}}.

  Send a confirmation email to the user acknowledging receipt of their inquiry. The email should thank the user for contacting us and inform them that we will review their inquiry and respond as soon as possible.

  Return a JSON object with the success status (true/false) and a message indicating the status of the email sending process.
  {
    "success": true,
    "message": "Confirmation email sent successfully to the user." 
  }
`,
});

// Define the Genkit flow for automated inquiry response
const automatedInquiryResponseFlow = ai.defineFlow(
  {
    name: 'automatedInquiryResponseFlow',
    inputSchema: AutomatedInquiryResponseInputSchema,
    outputSchema: AutomatedInquiryResponseOutputSchema,
  },
  async input => {
    try {
      // Call the prompt to generate the confirmation email content and determine success status
      const {output} = await automatedInquiryResponsePrompt(input);
      return output!;
    } catch (error: any) {
      console.error('Error sending confirmation email:', error);
      return {
        success: false,
        message: `Failed to send confirmation email. ${error.message || 'Unknown error'}`,
      };
    }
  }
);
